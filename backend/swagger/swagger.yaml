openapi: 3.0.0
info:
  title: Personal Finance Tracker API
  version: 1.0.0
  description: API documentation for managing personal finances

servers:
  - url: http://localhost:8000

tags:
  - name: Auth
    description: User authentication routes
  - name: Transactions
    description: Manage transactions and summaries
  - name: Receipts
    description: Upload and manage receipts

paths:
  /users/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully

  /users/login:
    post:
      tags: [Auth]
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully

  /transactions:
    get:
      tags: [Transactions]
      summary: Get all transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /transactions/create:
    post:
      tags: [Transactions]
      summary: Create a new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created successfully

  /transactions/summary:
    get:
      tags: [Transactions]
      summary: Get transaction summary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Summary returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalIncome:
                    type: number
                  totalExpense:
                    type: number

  /transactions/{id}:
    delete:
      tags: [Transactions]
      summary: Delete a transaction
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Transaction deleted

  /transactions/receipt-upload:
    post:
      tags: [Receipts]
      summary: Upload a receipt image
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                receipt:
                  type: string
                  format: binary
      responses:
        '200':
          description: Receipt uploaded successfully

  /transactions/pdf-upload:
    post:
      tags: [Receipts]
      summary: Upload a PDF
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdf:
                  type: string
                  format: binary
      responses:
        '200':
          description: PDF uploaded successfully

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    Transaction:
      type: object
      required:
        - title
        - amount
        - date
        - category
        - description
        - type
      properties:
        title:
          type: string
        amount:
          type: number
        date:
          type: string
          format: date-time
        category:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [income, expense]
        userId:
          type: string

    Receipt:
      type: object
      required:
        - transactionId
        - filePath
      properties:
        transactionId:
          type: string
        filePath:
          type: string
        extractedText:
          type: string
        uploadedAt:
          type: string
          format: date-time
